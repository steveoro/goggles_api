version: 2.1
# Used only by GHA (which are currently unused):
# parameters:
#   GHA_Actor:
#     type: string
#     default: ""
#   GHA_Action:
#     type: string
#     default: ""
#   GHA_Event:
#     type: string
#     default: ""
#   GHA_Meta:
#     type: string
#     default: ""

orbs:
  ruby: circleci/ruby@2.5.3

common-config: &common-config
  resource_class: large
  working_directory: ~/goggles_api
  shell: /bin/bash --login
  # NOTE: make sure ENV vars on CircleCI include CC_TEST_REPORTER_ID for CodeClimate test coverage upload!
  #       (Otherwise the 'upload-coverage' step will fail.)
  docker:
    - image: cimg/ruby:3.1.4-node
      environment:
        RAILS_ENV: test
        BUNDLE_JOBS: 2
        BUNDLE_RETRY: 2
        BUNDLE_PATH: vendor/bundle
        PAGER: cat
        GIT_LFS_SKIP_SMUDGE: 1
    - image: cimg/mariadb:11.4.1
      environment:
        DATABASE_NAME: goggles_test
        DATABASE_USER: root
        PAGER: cat

common-db-setup: &common-db-setup
  name: DB setup
  command: |
    sudo apt update
    sudo apt-get install mysql-client
    mkdir -p tmp ~/test-results ~/test-artifacts
    echo $RAILS_MASTER_KEY > config/master.key
    cp ./tmp/test.sql.bz2 db/dump/test.sql.bz2
    mv config/database_ci.yml config/database.yml
    dockerize -wait tcp://localhost:3306 -timeout 1m
    RAILS_ENV=test bin/rails db:rebuild from=test to=test
    RAILS_ENV=test bin/rails db:migrate
    ./tmp/cc-test-reporter before-build

jobs:
  persisted-data:
    <<: *common-config
    # parallelism: 1 (no actual need here)
    steps:
      - run:
          name:  Setup persisted data
          command: |
            mkdir -p tmp
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./tmp/cc-test-reporter
            chmod +x ./tmp/cc-test-reporter
            curl -L -o ./tmp/test.sql.bz2 "https://github.com/steveoro/goggles_db/raw/master/spec/dummy/db/dump/test.sql.bz2"
      - persist_to_workspace:
          root: tmp
          paths:
            - cc-test-reporter
            - test.sql.bz2

  rubocop:
    <<: *common-config
    # parallelism: 1 (no actual need here)
    steps:
      - checkout
      - ruby/install-deps:
          app-dir: ~/goggles_api
          key: goggles_api-v0807
      - run:
          name: Apply ActiveSupport logger patch
          # Patch the logger loading order issue in activesupport 6.1.7.10
          # NOTE: apply this after the install-deps step (or it will be overwritten)
          command: |
            patch -p1 -N -d vendor/bundle/ruby/3.1.0/gems/activesupport-6.1.7.10 < patches/activesupport-6.1.7-logger.patch
      - ruby/rubocop-check:
          app-dir: ~/goggles_api
          label: Rubocop
          format: pacman

  brakeman:
    <<: *common-config
    # parallelism: 1 (no actual need here)
    steps:
      - checkout
      - ruby/install-deps:
          app-dir: ~/goggles_api
          key: goggles_api-v0807
      - run:
          name: Apply ActiveSupport logger patch
          # Patch the logger loading order issue in activesupport 6.1.7.10
          command: |
            patch -p1 -N -d vendor/bundle/ruby/3.1.0/gems/activesupport-6.1.7.10 < patches/activesupport-6.1.7-logger.patch
      - run:
          name: Brakeman
          command: |
            bundle exec brakeman -A6q -c .brakeman.cfg

  zeitwerk:
    <<: *common-config
    # parallelism: 1 (no actual need here)
    steps:
      - checkout
      - attach_workspace:
          at: ~/goggles_api/tmp
      - ruby/install-deps:
          app-dir: ~/goggles_api
          key: goggles_api-v0807
      - run:
          name: Apply ActiveSupport logger patch
          # Patch the logger loading order issue in activesupport 6.1.7.10
          command: |
            patch -p1 -N -d vendor/bundle/ruby/3.1.0/gems/activesupport-6.1.7.10 < patches/activesupport-6.1.7-logger.patch
      - run:
          <<: *common-db-setup
      - run:
          name: Zeitwerk check
          command: |
            bundle exec rake zeitwerk:check


  rspec-A-B:
    <<: *common-config
    parallelism: 4
    steps:
      - checkout
      - attach_workspace:
          at: ~/goggles_api/tmp
      - ruby/install-deps:
          app-dir: ~/goggles_api
          key: goggles_api-v0807
      - run:
          name: Apply ActiveSupport logger patch
          # Patch the logger loading order issue in activesupport 6.1.7.10
          command: |
            patch -p1 -N -d vendor/bundle/ruby/3.1.0/gems/activesupport-6.1.7.10 < patches/activesupport-6.1.7-logger.patch
      - run:
          <<: *common-db-setup
      - run:
          name: RSpec - A..B
          command: |
            TEST_FILES=$(circleci tests glob "spec/api/goggles/a*_spec.rb" "spec/api/goggles/b*_spec.rb")
            echo "$TEST_FILES" | circleci tests run --command="xargs bundle exec rspec --color --order rand -f doc \
                 --format RspecJunitFormatter -o ~/test-results/rspec-a-b.xml" --verbose --split-by=timings
            ./tmp/cc-test-reporter format-coverage -t simplecov -o "./tmp/codeclimate.rspec-a-b.$CIRCLE_NODE_INDEX.json"
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-artifacts
      - persist_to_workspace:
          root: tmp
          paths:
            - codeclimate.rspec-a-b.*.json

  rspec-C-F:
    <<: *common-config
    parallelism: 4
    steps:
      - checkout
      - attach_workspace:
          at: ~/goggles_api/tmp
      - ruby/install-deps:
          app-dir: ~/goggles_api
          key: goggles_api-v0807
      - run:
          name: Apply ActiveSupport logger patch
          # Patch the logger loading order issue in activesupport 6.1.7.10
          command: |
            patch -p1 -N -d vendor/bundle/ruby/3.1.0/gems/activesupport-6.1.7.10 < patches/activesupport-6.1.7-logger.patch
      - run:
          <<: *common-db-setup
      - run:
          name: RSpec - C..F
          command: |
            TEST_FILES=$(circleci tests glob "spec/api/goggles/c*_spec.rb" "spec/commands/*_spec.rb" "spec/api/goggles/f*_spec.rb")
            echo "$TEST_FILES" | circleci tests run --command="xargs bundle exec rspec --color --order rand -f doc \
                 --format RspecJunitFormatter -o ~/test-results/rspec-c-f.xml" --verbose --split-by=timings
            ./tmp/cc-test-reporter format-coverage -t simplecov -o "./tmp/codeclimate.rspec-c-f.$CIRCLE_NODE_INDEX.json"
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-artifacts
      - persist_to_workspace:
          root: tmp
          paths:
            - codeclimate.rspec-c-f.*.json


  rspec-I:
    <<: *common-config
    parallelism: 2
    steps:
      - checkout
      - attach_workspace:
          at: ~/goggles_api/tmp
      - ruby/install-deps:
          app-dir: ~/goggles_api
          key: goggles_api-v0807
      - run:
          name: Apply ActiveSupport logger patch
          # Patch the logger loading order issue in activesupport 6.1.7.10
          command: |
            patch -p1 -N -d vendor/bundle/ruby/3.1.0/gems/activesupport-6.1.7.10 < patches/activesupport-6.1.7-logger.patch
      - run:
          <<: *common-db-setup
      - run:
          name: RSpec - I
          # FIXME: currently for some reason (and *only on this job*) the glob does't work and yields 0 files
          #        if I don't echo it 2 times (1st on console, 2nd in pipe):
          command: |
            TEST_FILES=$(circleci tests glob "spec/api/goggles/i*_spec.rb")
            echo "ALL I* FILES: $TEST_FILES"
            echo "$TEST_FILES" | circleci tests run --command="xargs bundle exec rspec --color --order rand -f doc \
                 --format RspecJunitFormatter -o ~/test-results/rspec-i.xml" --verbose --split-by=timings
            ./tmp/cc-test-reporter format-coverage -t simplecov -o "./tmp/codeclimate.rspec-i.$CIRCLE_NODE_INDEX.json"
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-artifacts
      - persist_to_workspace:
          root: tmp
          paths:
            - codeclimate.rspec-i.*.json


  rspec-L-M:
    <<: *common-config
    parallelism: 3
    steps:
      - checkout
      - attach_workspace:
          at: ~/goggles_api/tmp
      - ruby/install-deps:
          app-dir: ~/goggles_api
          key: goggles_api-v0807
      - run:
          name: Apply ActiveSupport logger patch
          # Patch the logger loading order issue in activesupport 6.1.7.10
          command: |
            patch -p1 -N -d vendor/bundle/ruby/3.1.0/gems/activesupport-6.1.7.10 < patches/activesupport-6.1.7-logger.patch
      - run:
          <<: *common-db-setup
      - run:
          name: RSpec - L..M
          command: |
            TEST_FILES=$(circleci tests glob "spec/api/goggles/l*_spec.rb" "spec/api/goggles/m*_spec.rb")
            echo "$TEST_FILES" | circleci tests run --command="xargs bundle exec rspec --color --order rand -f doc \
                 --format RspecJunitFormatter -o ~/test-results/rspec-l-m.xml" --verbose --split-by=timings
            ./tmp/cc-test-reporter format-coverage -t simplecov -o "./tmp/codeclimate.rspec-l-m.$CIRCLE_NODE_INDEX.json"
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-artifacts
      - persist_to_workspace:
          root: tmp
          paths:
            - codeclimate.rspec-l-m.*.json


  rspec-R-S:
    <<: *common-config
    parallelism: 3
    steps:
      - checkout
      - attach_workspace:
          at: ~/goggles_api/tmp
      - ruby/install-deps:
          app-dir: ~/goggles_api
          key: goggles_api-v0807
      - run:
          name: Apply ActiveSupport logger patch
          # Patch the logger loading order issue in activesupport 6.1.7.10
          command: |
            patch -p1 -N -d vendor/bundle/ruby/3.1.0/gems/activesupport-6.1.7.10 < patches/activesupport-6.1.7-logger.patch
      - run:
          <<: *common-db-setup
      - run:
          name: RSpec - R..S
          command: |
            TEST_FILES=$(circleci tests glob "spec/api/goggles/r*_spec.rb" "spec/api/goggles/s*_spec.rb")
            echo "$TEST_FILES" | circleci tests run --command="xargs bundle exec rspec --color --order rand -f doc \
                 --format RspecJunitFormatter -o ~/test-results/rspec-r-s.xml" --verbose --split-by=timings
            ./tmp/cc-test-reporter format-coverage -t simplecov -o "./tmp/codeclimate.rspec-r-s.$CIRCLE_NODE_INDEX.json"
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-artifacts
      - persist_to_workspace:
          root: tmp
          paths:
            - codeclimate.rspec-r-s.*.json


  rspec-T-U:
    <<: *common-config
    parallelism: 2
    steps:
      - checkout
      - attach_workspace:
          at: ~/goggles_api/tmp
      - ruby/install-deps:
          app-dir: ~/goggles_api
          key: goggles_api-v0807
      - run:
          name: Apply ActiveSupport logger patch
          # Patch the logger loading order issue in activesupport 6.1.7.10
          command: |
            patch -p1 -N -d vendor/bundle/ruby/3.1.0/gems/activesupport-6.1.7.10 < patches/activesupport-6.1.7-logger.patch
      - run:
          <<: *common-db-setup
      - run:
          name: RSpec - T..U
          command: |
            TEST_FILES=$(circleci tests glob "spec/api/goggles/t*_spec.rb" "spec/api/goggles/u*_spec.rb")
            echo "$TEST_FILES" | circleci tests run --command="xargs bundle exec rspec --color --order rand -f doc \
                 --format RspecJunitFormatter -o ~/test-results/rspec-t-u.xml" --verbose --split-by=timings
            ./tmp/cc-test-reporter format-coverage -t simplecov -o "./tmp/codeclimate.rspec-t-u.$CIRCLE_NODE_INDEX.json"
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-artifacts
      - persist_to_workspace:
          root: tmp
          paths:
            - codeclimate.rspec-t-u.*.json


  upload-coverage:
    <<: *common-config
    # parallelism: 1 (no actual need here)
    steps:
      - attach_workspace:
          at: ~/goggles_api/tmp
      - run:
          name: CodeClimate upload
          command: |
            echo "*** Persisted contents: ***"
            ls -l ./tmp
            ./tmp/cc-test-reporter sum-coverage -o - tmp/codeclimate.*.json | ./tmp/cc-test-reporter upload-coverage --debug --input -


  docker-latest:
    <<: *common-config
    steps:
      - checkout
      - ruby/install-deps:
          app-dir: ~/goggles_api
          key: goggles_api-v0807
      - run:
          name: Apply ActiveSupport logger patch
          # Patch the logger loading order issue in activesupport 6.1.7.10
          command: |
            patch -p1 -N -d vendor/bundle/ruby/3.1.0/gems/activesupport-6.1.7.10 < patches/activesupport-6.1.7-logger.patch
      - setup_remote_docker:
          version: default
          docker_layer_caching: true
      - run:
          name: Docker LATEST staging
          command: |
            echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin
            docker pull $DOCKERHUB_USERNAME/goggles-api:latest
            docker build -t $DOCKERHUB_USERNAME/goggles-api:latest --cache-from=$DOCKERHUB_USERNAME/goggles-api:latest -f Dockerfile.staging .
            docker push $DOCKERHUB_USERNAME/goggles-api:latest

  docker-versioned:
    <<: *common-config
    steps:
      - checkout
      - ruby/install-deps:
          app-dir: ~/goggles_api
          key: goggles_api-v0807
      - run:
          name: Apply ActiveSupport logger patch
          # Patch the logger loading order issue in activesupport 6.1.7.10
          command: |
            patch -p1 -N -d vendor/bundle/ruby/3.1.0/gems/activesupport-6.1.7.10 < patches/activesupport-6.1.7-logger.patch
      - setup_remote_docker:
          version: default
          docker_layer_caching: true
      - run:
          name: Docker TAGGED prod
          command: |
            echo "Git Tag: << pipeline.git.tag >>"
            echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin
            docker pull $DOCKERHUB_USERNAME/goggles-api:latest
            docker build -t $DOCKERHUB_USERNAME/goggles-api:prod-<< pipeline.git.tag >> --cache-from=$DOCKERHUB_USERNAME/goggles-api:latest -f Dockerfile.prod .
            docker push $DOCKERHUB_USERNAME/goggles-api:prod-<< pipeline.git.tag >>


workflows:
  build-docker-versioned:
    jobs:
      - persisted-data:
          filters:
            tags:
              only: /^\d+\.\d+.*/
            branches:
              ignore: /.*/
      - brakeman:
          requires:
            - persisted-data
          filters:
            tags:
              only: /^\d+\.\d+.*/
            branches:
              ignore: /.*/
      - zeitwerk:
          requires:
            - persisted-data
          filters:
            tags:
              only: /^\d+\.\d+.*/
            branches:
              ignore: /.*/
      - docker-versioned:
          requires:
            - brakeman
            - zeitwerk
          filters:
            tags:
              only: /^\d+\.\d+.*/
            branches:
              ignore: /.*/

  test-and-build-latest:
    jobs:
      - persisted-data
      - brakeman:
          requires:
            - persisted-data
      - rubocop:
          requires:
            - persisted-data
      - zeitwerk:
          requires:
            - persisted-data

      - rspec-A-B:
          requires:
            - brakeman
            - rubocop
            - zeitwerk

      - rspec-C-F:
          requires:
            - brakeman
            - rubocop
            - zeitwerk

      - rspec-I:
          requires:
            - brakeman
            - rubocop
            - zeitwerk

      - rspec-L-M:
          requires:
            - rspec-A-B
      - rspec-R-S:
          requires:
            - rspec-I
      - rspec-T-U:
          requires:
            - rspec-C-F

      - upload-coverage:
          requires:
            - rspec-L-M
            - rspec-R-S
            - rspec-T-U

      - docker-latest:
          requires:
            - upload-coverage
