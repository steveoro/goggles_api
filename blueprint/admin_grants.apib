# Group AdminGrants

_**Admin-only group**_


# AdminGrant list [/api/v3/admin_grants{?page,per_page,entity,user_id}]

+ Model (application/json)

    + Header

            Link: "<API_HOST:PORT/api/v3/admin_grants?page=2>; rel=\"last\", <http://localhost:3000/api/v3/admin_grants?page=2>; rel=\"next\""
            Total: 46
            Per-Page: 25
            Page: 1

    + Body

            [
                // AdminGrant details 1
                {
                    "id": 1,
                    "entity": null,
                    "user_id": 1,
                    // [...]
                },

                // AdminGrant details 2
                {
                    "id": 2,
                    "entity": "UserWorkshop",
                    "user_id": 4,
                    // [...]
                },

                // [...]
            ]


## list [GET]

The list of AdminGrants associated to the specified filtering values,
returned as JSON and optionally filtered by any or all from:

- `entity`
- `user_id`

Returns exact matches for all the parameters.

Optional pagination parameters for the request:

- `page`: current/selected page cursor
- `per_page`: total items per data page (default: 25)

:key: => satisfy both conditions:
1. `Authorization` request header => valid JWT **required**
2. authenticated user must have generic **Admin** grants


### Entity name

The `entity` name parameter acts as a wildcard if set to null:

- entity name set to a model name => CRUD grant for the specific User ID & Entity name tuple
- entity name set to null => Full Admin & CRUD grant for the specific User ID _for any Entity name_.


### Pagination

Pagination links will be returned in the `Link` _response header_, for all arrays with
more than 25 results.

Typical `Link` header format (single String, separated by COMMA+BLANK):

    "<REQ_URL_FOR_NEXT_PAGE>; rel=\"next\", <REQ_URL_FOR_LAST_PAGE>; rel=\"last\""


* * *


+ Parameters
    + entity: "User" (string, optional) - associated Entity name (no namespace prefix); when null => "any entity"
    + user_id: 1 (string, optional) - associated User ID
    + page: 1 (number, optional) - pagination: selected page
        + Default: 1
    + per_page: 25 (number, optional) - pagination: desired total rows per page
        + Default: 25


+ Request ok (application/json)

    ### Examples

    #### `curl` (Bash):

    ```bash
    $> curl -i -X GET -H "Content-Type: application/json" \
            -H 'Authorization: "Bearer VALID-SESSION-JWT"' \
            "<API_HOST:PORT>/api/v3/admin_grants?user_id=1"
    ```

    #### `RestClient` (Ruby):

    _(Note that due to how the current version of RestClient handles the actual query parameters of the request,
    the `params` hash needs to be specified inside the `headers` hash.)_

    ```ruby
    > res = RestClient::Request.execute(
                method: :get,
                url: '<API_HOST:PORT>/api/v3/admin_grants',
                headers: {
                    "Authorization" => "Bearer VALID-SESSION-JWT",
                    params: { user_id: 1 }
                }
            )
    => <RestClient::Response 200 "[{\"id\":1,...">
    ```

    * * *

    + Header

            Authorization: "Bearer VALID-SESSION-JWT"

+ Response 200

    [AdminGrant list][]


+ Request not found (application/json)

    + Header

            Authorization: "Bearer VALID-SESSION-JWT"

+ Response 200 (application/json)

        []


+ Request bad JWT (application/json)

    All JWTs expire: see [Session API docs](#sessions-session-post) for info.

    + Header

            Authorization: "Bearer BAD-OR-EXPIRED-JWT"

+ Response 401 (application/json)

    + Header

            X-Error-Detail: "Invalid JWT token"

    + Body

            { "msg": "Unauthorized" }


+ Request no JWT (application/json)

+ Response 401 (application/json)


+ Request no grant (application/json)

+ Response 401 (application/json)

    + Header

            X-Error-Detail: "Invalid User grants"

    + Body

            { "msg": "Unauthorized" }
