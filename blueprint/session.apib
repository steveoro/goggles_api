# Group Sessions

## Session [/api/v3/session]

### new JWT [POST]
Returns a new JSON Web Token for an API session if the given credentials are valid.

_The JWT shall expire after 2 hours._
`GogglesDb::JWTManager::TOKEN_LIFE` stores the current value.

:key: static API key token **required**

#### Body Attributes:

- `e` (string, **required**): User email
- `p` (string, **required**): User password
- `t` (string, **required**): static authorization token for this API endpoint,
  stored in the app credentials


* * *


+ Attributes
    + e (string, required) - User email
    + p (string, required) - User password
    + t (string, required) - Static authorization token for the API endpoint


+ Request ok (application/json)

    #### Examples

    ##### `curl` (Bash):

    ```bash
    $> curl -i -X POST -H "Content-Type: application/json" \
            -d '{"e": "steve.alloro@whatever.example", "p": "a-valid-password", \
                "t": "valid-static-key-for-handshake"}' \
            "<API_HOST:PORT>/api/v3/session"
    ```

    ##### `RestClient` (Ruby):

    ```ruby
    > res = RestClient.post('<API_HOST:PORT>/api/v3/session',
            {
                'e': 'steve.alloro@whatever.example',
                'p': 'a-valid-password',
                't': Rails.application.credentials.api_static_key
            } )
    => <RestClient::Response 201 "{\"msg\":\"OK\"...">

    > puts res.body
    {"msg":"OK","jwt":<RETURNED_JWT_TEXT>}
    ```

    * * *

    + Header

            Authorization: "Bearer VALID-SESSION-JWT"

    + Body

            {
                "e": "steve.alloro@whatever.example",
                "p": "a-valid-password",
                "t": "valid-static-key-for-handshake"
            }

+ Response 200 (application/json)

        {
            "msg": "OK",
            "jwt": "New-VALID-SESSION-JWT"
        }


+ Request unconfirmed user (application/json)

        {
            "e": "unconfirmed.user@whatever.example",
            "p": "a-valid-password",
            "t": "valid-static-key-for-handshake"
        }

+ Response 401 (application/json)

    + Header

            X-Error-Detail: "Unconfirmed User email"

    + Body

            { "msg": "Unauthorized" }


+ Request bad credentials (application/json)

        {
            "e": "steve.alloro@whatever.example",
            "p": "NOT-a-valid-password",
            "t": "valid-static-key-for-handshake"
        }

+ Response 401 (application/json)

    + Header

            X-Error-Detail: "Invalid User credentials"

    + Body

            { "msg": "Unauthorized" }


+ Request bad token (application/json)

        {
            "e": "steve.alloro@whatever.example",
            "p": "a-valid-password",
            "t": "INVALID-static-key"
        }

+ Response 401 (application/json)

    + Header

            X-Error-Detail: "Invalid API static token"

    + Body

            { "msg": "Unauthorized" }
